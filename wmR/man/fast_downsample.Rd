% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wmR.fastdownsample.R
\name{fast_downsample}
\alias{fast_downsample}
\title{fast_downsample}
\usage{
fast_downsample(
  pddt,
  by,
  Hz = 100,
  useref = FALSE,
  non.average.columns = c("IthSaccadeThisSubject", "Blink", "Fixation", "Saccade",
    "avel", "pvel"),
  non.average.columns.na.rm = "TTL"
)
}
\arguments{
\item{pddt}{a pupil dilation \code{data.table} of a single participant containing at least the following
four columns:
\itemize{
\item{Dil} containing the dilation samples
\item{X} X coordinate of the eye associated with each sample
\item{Y} Y coordinate of the eye associated with each sample
\item{Time} time stamp in ms associated with each sample
\item{Trial} indicating to which trial the current sample belongs. If your data has no trials, create a column \code{Trial} and set all rows to \code{1}
}}

\item{by}{a vector of character names of the columns defining unique trials.
This should contain all columns that (i) have just one unique value per trial
(e.g., stimulus_image, response_correct, RT, etc.), and that (ii) should be
included in the final dataset. Use \code{non.average.colums} to indicate
other factors.}

\item{Hz}{target Hz}

\item{useref}{boolean (default: FALSE). Defines whether internally a
\code{copy()} of data.table is used, or the original data.table by reference.
Can be set TRUE to squeeze the last bit of performance out of it.
Only do so if you're absolutely sure you don't mind your original pddt-data.table to be messed with.}

\item{non.average.columns}{a vector of column names. This is especially useful
to integrate blink/saccade/fixation/ttl statistics as included in Eyelink's
EDF files. For each column, the most frequent value is returned to the bin in
the resulting data.table. For columns coding blinks/saccades/fixations as
logicals, make sure they are NA whenever not happening.}

\item{non.average.columns.na.rm}{same as \code{non.average.columns}, with the
difference that NAs are ignored. This is especially useful for TTL triggers.
The TTL column is likely mostly NA and has just very few TTLs. You don't want
to lose that information, but instead you want to have that trigger assigned
to the bin.}
}
\value{
Returns a downsampled copy of the original \code{data.table} with the following columns:
\itemize{
\item{\code{Dil}} downsampled dilation value
\item{\code{X}} downsampled X coordinate
\item{\code{Y}} downsampled Y coordinate
\item{\code{Time}} downsampled time stamp in ms
\item{\code{Trial}} indicating to which trial this downsampled sample belongs
\item{\code{...}} all columns listed in the \code{by} argument.
}
}
\description{
Fast downsampling of eyetracking data. Originally based on pR::downsample
However, it's *much faster* and can handle with more sorts of input
(see below). Downsampling is done via computing bin-wise medians.
This is a very simple solution, but one that is appropriate, given the slow
pupil response -- as long as the output frequency is sufficiently high.


new documentation:

Downsample pupil dilation data to a given frequency

This is a modified version of pR::downsample (see github.com/hedderik/pR).
In comparison to the original, this version can process additional information
as captured on-line by the eyetracker. For example:
- TTL trigger sent to the SR-host-PC
- Saccades
- Blinks
- Fixations
- Velocity

Please indicate all columns that are not always the same within a trial
(i.e., that cannot go into the "by" argument) and that should not be averaged
over (i.e., not X, Y, or Dil) in \code{non.average.columns}.
Typically, that's saccade, ttl, blink, and fixation statistics.
}
\examples{
\dontrun{
foo = colnames(samples)
non.average.columns = foo[foo \%like\% '(^(sacc|fix|blink|event))']
BY = foo[!(foo \%in\% c('Dil', 'X', 'Y', 'Flags', 'DilDiff', 'TTL',
                     'RelTime', 'Baseline','Time','ID',
                     non.average.columns))]

samples <- fast_downsample(samples, by = BY, Hz = 100, useref = TRUE)
}
}
\author{
(2020) Wanja MÃ¶ssing; basis: Jacolien van Rij, Hedderik van Rijn
}
