% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wmR.fastdownsample.R
\name{fast_median_resampler}
\alias{fast_median_resampler}
\title{fast_median_resampler}
\usage{
fast_median_resampler(dat, Hz = 100, useref = FALSE, dscols = "Dil")
}
\arguments{
\item{dat}{a \code{data.table} in long format, containing only two columns:
\itemize{
\item{<dscols>} data column specified by `dscols`
\item{Time} time stamp in ms (!) associated with each sample
}}

\item{Hz}{target Hz; ideally source Hz should be a multiple of target Hz}

\item{useref}{boolean (default: FALSE). Defines whether internally a
\code{copy()} of data.table is used, or the original data.table by reference.
Can be set TRUE to squeeze the last bit of performance out of it.
Only do so if you're absolutely sure you don't mind your original pddt-data.table to be messed with.}

\item{dscols}{a string with the column name of the to-be-resampled data}
}
\value{
Returns a downsampled copy of the original \code{data.table} with the following columns:
}
\description{
Fast downsampling of simple time-series data.
However, it's *much faster*.
Downsampling is done via computing bin-wise medians.
This is a very simple solution. Check if this is appropriate for you data.
See wmR::fast_downsample for an Eyelink-Eyetracking specific version.

This simple version assumes that your input data table is in long format and
has only two columns: Time and whatever your value is (e.g., Time and
Dilation).
}
\examples{
\dontrun{
foo <- data.table(Dil=1:0.5:500, Time=1:1000)
bar <- fast_median_resampler(foo, Hz = 100, dscols = 'Dil')
}
}
\seealso{
wmr::fast_downsample
}
\author{
(2021) Wanja MÃ¶ssing
}
